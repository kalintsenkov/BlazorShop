@page "/products/page/{Page:int}"
@page "/products/search/{SearchQuery}/page/{Page:int}"
@page "/products/category/{CategoryName}/{CategoryId:int}"
@page "/products/category/{CategoryName}/{CategoryId:int}/page/{Page:int}"
@page "/products/category/{CategoryName}/{CategoryId:int}/search/{SearchQuery}/page/{Page:int}"

@if (products == null || categories == null)
{
    <LoadingScreen />
}
else
{
    <section class="section-content padding-y bg">
        <div class="container">

            <div class="row">

                <aside class="col-md-3">

                    <EditForm Model="model" @oninput="() => LoadData(withCategories: false)">

                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title">Search</h5>

                                <div class="input-group">
                                    <input @bind-value="SearchQuery" @bind-value:event="oninput" type="text" placeholder="Keyword" class="form-control" />
                                    <span class="input-group-append">
                                        <button class="btn btn-primary">
                                            <i class="fa fa-search"></i>
                                        </button>
                                    </span>
                                </div>
                            </div>
                        </div>

                        <div class="card">

                            <article class="filter-group">
                                <header class="card-header">
                                    <a href="#" data-toggle="collapse" data-target="#collapse_1" aria-expanded="true" class="">
                                        <i class="icon-control fa fa-chevron-down"></i>
                                        <h6 class="title">Categories</h6>
                                    </a>
                                </header>
                                <div class="filter-content collapse show" id="collapse_1">
                                    <div class="card-body">

                                        @foreach (var category in categories)
                                        {
                                            var categoryName = category.Name;
                                            var currentCategory = string.Empty;

                                            if (NavigationManager.Uri.Contains("/category"))
                                            {
                                                currentCategory = WebUtility.UrlDecode(NavigationManager.Uri.Split('/')[5]);
                                            }

                                            var isChecked = currentCategory == categoryName;

                                            <a href="/products/category/@category.Name/@category.Id" class="text-dark">
                                                <label class="custom-control custom-radio">

                                                    @if (isChecked)
                                                    {
                                                        <input type="radio" name="myfilter_radio" class="custom-control-input" checked />
                                                    }
                                                    else
                                                    {
                                                        <input type="radio" name="myfilter_radio" class="custom-control-input">
                                                    }

                                                    <span class="custom-control-label">
                                                        @category.Name
                                                    </span>

                                                </label>
                                            </a>
                                        }

                                    </div>
                                </div>
                            </article>
                            <article class="filter-group">
                                <header class="card-header">
                                    <a href="#" data-toggle="collapse" data-target="#collapse_3" aria-expanded="true" class="">
                                        <i class="icon-control fa fa-chevron-down"></i>
                                        <h6 class="title"> Price range </h6>
                                    </a>
                                </header>
                                <div class="filter-content collapse show" id="collapse_3" style="">
                                    <div class="card-body">
                                        <input type="range" @bind-value="model.MinPrice" @bind-value:event="oninput" class="custom-range" min="0" max="@model.MaxPrice" />
                                        <div class="form-row">
                                            <div class="form-group col-md-6">
                                                <label>Min</label>
                                                <input @bind-value="model.MinPrice" @bind-value:event="oninput" class="form-control" placeholder="$0" type="number" />
                                            </div>
                                            <div class="form-group text-right col-md-6">
                                                <label>Max</label>
                                                <input @bind-value="model.MaxPrice" @bind-value:event="oninput" class="form-control" placeholder="$1,0000" type="number" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </article>

                        </div>

                        <a @onclick="Reset"
                           @onclick:preventDefault
                           href="#"
                           class="btn btn-light btn-sm mt-2">
                            Reset
                        </a>

                    </EditForm>
                </aside>

                <main class="col-md-9">

                    <header class="border-bottom mb-4 pb-3">
                        <div class="form-inline">
                            <span class="mr-md-auto">@products.Count() Items found </span>

                            <div class="btn-group">

                                @if (ListView)
                                {
                                    <a @onclick="ChangeView"
                                       @onclick:preventDefault
                                       href="#"
                                       class="btn btn-outline-secondary active"
                                       data-toggle="tooltip"
                                       title="List view">
                                        <i class="fa fa-bars"></i>
                                    </a>
                                    <a @onclick="ChangeView"
                                       @onclick:preventDefault
                                       href="#"
                                       class="btn btn-outline-secondary"
                                       data-toggle="tooltip"
                                       title="Grid view">
                                        <i class="fa fa-th"></i>
                                    </a>
                                }
                                else
                                {
                                    <a @onclick="ChangeView"
                                       @onclick:preventDefault
                                       href="#"
                                       class="btn btn-outline-secondary"
                                       data-toggle="tooltip"
                                       title="List view">
                                        <i class="fa fa-bars"></i>
                                    </a>
                                    <a @onclick="ChangeView"
                                       @onclick:preventDefault
                                       href="#"
                                       class="btn btn-outline-secondary active"
                                       data-toggle="tooltip"
                                       title="Grid view">
                                        <i class="fa fa-th"></i>
                                    </a>
                                }

                            </div>
                        </div>
                    </header>

                    @if (GridView)
                    {
                        <div class="row">

                            @foreach (var product in this.products)
                            {
                                <div class="col-md-4">
                                    <figure class="card card-product-grid">
                                        <div class="img-wrap">
                                            <img src="@product.ImageSource" />
                                            <span class="topbar">
                                                <a @onclick="() => AddToWishlist(product.Id)"
                                                   @onclick:preventDefault
                                                   href="#"
                                                   class="float-right">
                                                    <i class="fa fa-heart"></i>
                                                </a>
                                            </span>
                                            <a class="btn-overlay" href="/products/@product.Id/@product.Name">
                                                <i class="fa fa-search-plus"></i>
                                                Quick view
                                            </a>
                                        </div>
                                        <figcaption class="info-wrap">
                                            <div class="fix-height">
                                                <a href="/products/@product.Id/@product.Name" class="title">
                                                    @product.Name
                                                </a>
                                                <div class="price-wrap mt-2">
                                                    <span class="price">$@product.Price</span>
                                                    @*<del class="price-old">$1980</del>*@
                                                </div>
                                            </div>
                                            <a @onclick="() => AddToCart(product.Id)"
                                               @onclick:preventDefault
                                               href="#"
                                               class="btn btn-block btn-primary">
                                                Add to cart
                                            </a>
                                        </figcaption>
                                    </figure>
                                </div>
                            }

                        </div>
                    }
                    else
                    {
                        foreach (var product in this.products)
                        {
                            <article class="card card-product-list">
                                <div class="row no-gutters">
                                    <aside class="col-md-3">
                                        <a href="/products/@product.Id/@product.Name" class="img-wrap">
                                            <img src="@product.ImageSource" />
                                        </a>
                                    </aside>
                                    <div class="col-md-6">
                                        <div class="info-main">
                                            <a href="/products/@product.Id/@product.Name" class="h5 title">
                                                @product.Name
                                            </a>

                                            <p> @product.Description </p>
                                        </div>
                                    </div>
                                    <aside class="col-sm-3">
                                        <div class="info-aside">
                                            <div class="price-wrap">
                                                <span class="price h5"> $@product.Price </span>
                                                @*<del class="price-old"> $198</del>*@
                                            </div>
                                            <p class="text-success">Free shipping</p>

                                            <br />

                                            <p>
                                                <a href="/products/@product.Id/@product.Name"
                                                   class="btn btn-primary btn-block">
                                                    Details
                                                </a>
                                                <a @onclick="() => AddToWishlist(product.Id)"
                                                   @onclick:preventDefault
                                                   href="#"
                                                   class="btn btn-light btn-block">
                                                    <i class="fa fa-heart"></i>
                                                    <span class="text">Add to wishlist</span>
                                                </a>
                                            </p>
                                        </div>
                                    </aside>
                                </div>
                            </article>
                        }
                    }

                    <Pagination Page="@searchResponse.Page"
                                TotalPages="@searchResponse.TotalPages"
                                Radius="2"
                                SelectedPage="SelectedPage" />

                </main>

            </div>

        </div>
    </section>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private readonly ProductsSearchRequestModel model = new ProductsSearchRequestModel();

    private ProductsSearchResponseModel searchResponse;
    private IEnumerable<ProductsListingResponseModel> products;
    private IEnumerable<CategoriesListingResponseModel> categories;

    [Parameter]
    public int? CategoryId { get; set; }

    [Parameter]
    public string CategoryName { get; set; }

    [Parameter]
    public string SearchQuery { get; set; } = string.Empty;

    [Parameter]
    public int Page { get; set; } = 1;

    [Parameter]
    public bool ListView { get; set; } = false;

    [Parameter]
    public bool GridView { get; set; } = true;

    protected override async Task OnInitializedAsync() => await this.LoadData();

    protected override async Task OnParametersSetAsync() => await this.LoadData(withCategories: false);

    private async Task SelectedPage(int page)
    {
        this.Page = page;

        await this.LoadData(withCategories: false);
    }

    private async Task LoadData(bool withCategories = true)
    {
        if (this.Page == 0)
        {
            this.Page = 1;
        }

        this.model.Category = this.CategoryId;
        this.model.Query = this.SearchQuery;
        this.model.Page = this.Page;

        var requestUrl = "api/products" +
            $"?category={this.model.Category}" +
            $"&minPrice={this.model.MinPrice}" +
            $"&maxPrice={this.model.MaxPrice}" +
            $"&query={this.model.Query}" +
            $"&page={this.model.Page}";

        this.searchResponse = await this.Http.GetFromJsonAsync<ProductsSearchResponseModel>(requestUrl);
        this.products = this.searchResponse.Products;

        if (withCategories)
        {
            this.categories = await this.Http.GetFromJsonAsync<IEnumerable<CategoriesListingResponseModel>>("api/categories");
        }

        this.Filter();
    }

    private async Task AddToWishlist(int id)
    {
        await this.Http.PostAsJsonAsync($"api/wishlists/AddProduct/{id}", id);
        this.NavigationManager.NavigateTo("/wishlist");
    }

    private async Task AddToCart(int id)
    {
        var user = (await authenticationStateTask).User;
        if (!user.Identity.IsAuthenticated)
        {
            this.NavigationManager.NavigateTo("/account/login");
            return;
        }
		
        var cartRequest = new ShoppingCartRequestModel
        {
            ProductId = id,
            Quantity = 1
        };

        var response = await this.Http.PostAsJsonAsync("api/shoppingcarts/AddProduct", cartRequest);

        if (!response.IsSuccessStatusCode)
        {
            var errors = await response.Content.ReadFromJsonAsync<string[]>();
            this.ToastService.ShowError(errors.First());
        }
        else
        {
            this.NavigationManager.NavigateTo("/cart", forceLoad: true);
        }
    }

    private void ChangeView()
    {
        this.ListView = !this.ListView;
        this.GridView = !this.GridView;
    }

    private void Reset()
    {
        this.model.MinPrice = null;
        this.model.MaxPrice = null;
        this.NavigationManager.NavigateTo("/products/page/1");
    }

    private void Filter()
    {
        if (!string.IsNullOrWhiteSpace(this.model.Query) && string.IsNullOrWhiteSpace(this.CategoryName) && !this.model.Category.HasValue)
        {
            this.NavigationManager.NavigateTo($"/products/search/{this.model.Query}/page/{this.model.Page}");
        }
        else if (!string.IsNullOrWhiteSpace(this.model.Query) && !string.IsNullOrWhiteSpace(this.CategoryName) && this.model.Category.HasValue)
        {
            this.NavigationManager.NavigateTo($"/products/category/{this.CategoryName}/{this.model.Category}/search/{this.model.Query}/page/{this.model.Page}");
        }
        else if (!string.IsNullOrWhiteSpace(this.CategoryName) && this.model.Category.HasValue)
        {
            this.NavigationManager.NavigateTo($"/products/category/{this.CategoryName}/{this.model.Category}/page/{this.model.Page}");
        }
        else if (string.IsNullOrWhiteSpace(this.model.Query) && string.IsNullOrWhiteSpace(this.CategoryName) && !this.model.Category.HasValue)
        {
            this.NavigationManager.NavigateTo($"/products/page/{this.model.Page}");
        }
    }
}
